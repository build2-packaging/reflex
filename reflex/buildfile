import! [metadata] yacc = byacc%exe{byacc}

./: exe{reflex} doc{README.md NEWS} man1{reflex} legal{COPYING} manifest

# Target metadata, see also --build2-metadata in main.c.
#
# Note that the generated parse.c queries the YYDEBUG environment variable but
# only if compiled with the YYDEBUG macro defined to 1.
#
exe{reflex}:
{
  export.metadata = 1 reflex
  reflex.name = [string] lex
  reflex.version  = [string] $version
  reflex.checksum = [string] $version
}

define y: file
y{*}: extension = y

define l: file
l{*}: extension = l

src = {h c}{* -parse -scan -initscan} {h c}{parse}

exe{reflex}: $src

if $config.reflex.develop
{
  # Bootstrap.
  #
  exe{reflex}: c{scan}
  exe{reflex-boot}: $src c{initscan}
  {
    install = false
  }

  # Note that we suppress #line directives (-L) since directory separators
  # are not properly escaped on Windows.
  #
  c{scan}: l{scan} exe{reflex-boot} h{parse flexdef config}
  {
    # Backlink in the source directory for convenience of development.
    #
    backlink = true
  }
  {{
    diag lex ($<[0])
    ($<[1]) -L -o $path($>) $path($<[0])
  }}
}
else
{
  exe{reflex}: c{initscan}
  ./: l{scan} # Keep in the distribution.
}

# Note that we suppress #line directives (-l) since directory separators
# are not properly escaped on Windows.
#
<{h c}{parse}>: y{parse} $yacc
{
  # Backlink in the source directory for convenience of development.
  #
  backlink = true
}
{{
  diag yacc ($<[0])
  $yacc -l -y "--defines=$path($>[0])" -o $path($>[1]) $path($<[0])
}}

c.poptions =+ "-I$out_root" "-I$src_root"

# Upstream uses line continuations inside string literals which trip up GCC
# bug #84583.
#
if ($c.target.system == 'mingw32')
  obj{main}: cc.reprocess = true
